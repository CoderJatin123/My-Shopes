import React from 'react';
import Card from '@/src/components/card';
import { useRouter } from 'next/router';
import Head from 'next/head';

const products = ( {data,category} ) => {
  const router = useRouter();
  return (

    <div className='flex justify-center'>
       <Head>
        <title>{category}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/my-shops.svg" />
      </Head>

      {
        data ?
          <div className='w-full h-full flex flex-col md:mx-0 md:w-11/12 lg:w-full content-center mb-10'>
            {/* Heading */}
            <h2 className='my-4 text-3xl text-primary font-semibold py-3'>Results</h2>

            <div className='grid grid-cols-1 sm:grid-cols-2 md:sm:grid-cols-3  lg:grid-cols-5 font-medium text-primary gap-3 sm:gap-3'>

              {data.map((item, index) => {
                return (
                  <Card key={index} product={item} category={category}/>
                )
              })}

            </div>

          </div>

          : <div className='w-full h-screen flex justify-center items-center text-primary text-opacity-90'>

            <div className='flex items-center flex-col lg:flex-row'>
              <div className='w-44 h-44'>
                <img src={'/no_item.png'} className='obj' fill />
              </div>

              <div className='flex flex-col'>
                <h1 className='text-2xl '>
                  Sorry, this item not available in our store.
                </h1>
                <h3 className='my-4 font-medium text-lg cursor-pointer text-secondary-dark' onClick={(e) => {
                  router.replace('/')
                }}>
                  Back to home
                </h3>
              </div>
            </div>
          </div>
      }
    </div>
  );
}


export async function getServerSideProps(context) {

  const Data=context.query;
 // console.log("ðŸš€ ~ file: [products].js:57 ~ getServerSideProps ~ Data", Data)

  

  if(Data.category && (Data.data==null || Data.data==undefined)){

    const {category} = Data;

  try {

    if(category!=null)
   
    var requestOptions = {
      method: 'GET',
      redirect: 'follow'
    };
    
    const responce=await fetch(`${process.env.NEXT_PUBLIC_HOST}api/products?code=getproductsBycatgory&category=${category}`, requestOptions)
    const Data=await responce.json();  
    
    if(Data.success){

      const {data}=Data;
      //console.log(data)
     // console.log("ðŸš€ ~ file: [products].js:91 ~ getServerSideProps ~ data", data)
      return { props: {data,category} }
    }

    else{
      return { props: {} }
    }

  }
  catch (err) {

    return { props: {} }
  }
}
else{




  const {keyword} = Data;
//  const list=await SearchProduct(keyword)



  var myHeaders = new Headers();
  myHeaders.append("Content-Type", "application/json");
  
  var raw = JSON.stringify({
    "keyword": keyword
  });
  
  var requestOptions = {
    method: 'POST',
    headers: myHeaders,
    body: raw,
    redirect: 'follow'
  };
  
  try{
    const res=await fetch(`${process.env.NEXT_PUBLIC_HOST}api/products?code=searchByTags`, requestOptions)
    const data=await res.json();
  
    if(data.success){
      const Data=await data;

      //console.log("ðŸš€ ~ file: [products].js:120 ~ getServerSideProps ~ Data", Data.data.filterData)
      return {props:{category:Data.category,data:Data.data.filterData}}
    }
    else{
    //  console.log("ðŸš€ ~ file: [products].js:125 ~ getServerSideProps ~ Data",)
      return {props:{}}
    }
  }
  
  catch(err){
  //  console.log("ðŸš€ ~ file: [products].js:125 ~ getServerSideProps ~ eroor",err)
    return {props:{}}
  }
 
}
}

export default products;
